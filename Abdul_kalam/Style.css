* {
  margin: 0;
  padding: 0; /* to remove the default margin and padding present with the container  */
  box-sizing: border-box;
}
/*Setting box-sizing: border-box; ensures that the padding and border are included within the element’s total width and height. 
This makes layout calculations easier and more predictable, especially when you add padding or borders to elements. In your CSS,
 applying it globally (* { box-sizing: border-box; }) helps maintain consistent sizing for all elements, preventing unexpected overflow and alignment issues in your layout. */
.container {
  background-color: #e5e5fd;
  min-height: 100vh;
  border: 10px solid #1d1e4c;
}

.content { /* in order to give the full width as of container or maximum width to cover it  */
  max-width: 900px;
  margin: 0 auto;
}
.top_section {
  margin-top: 100px;
  display: flex; /* as having all inside a div container then first given display flex to bring in same line then space between to  send on 
   opposite ends of container and at last to align the text we gave flex end to align-items ( to vertically place them at bottom along cross axis) */
  justify-content: space-between;
  align-items: flex-end;
}
.top_section h1 {
  font-size: 50px;
  font-weight: bold;
  color: #1d1e4c;
  text-transform: uppercase;
}
.top_section h4 {
  font-size: 30px;
  text-align: end; /* now since the birth date is a single text so to align it in the end selected its selector and then text-align to end */
}

.image_container {
  border-radius: 50%;
  overflow: hidden;
}

/*In CSS, overflow: hidden; means that any content that extends beyond the boundaries of the element will be clipped (hidden) and will not be visible. It prevents scrollbars from appearing and hides anything that overflows the element’s box.

In your code, it is used in the .image_container class to ensure that if the image inside the container is larger than the container itself (especially after applying border-radius: 50% for a circular effect), the overflowing parts of the image are not visible, keeping the image neatly cropped to a circle. */

.image_container,
img {
  width: 300px;
  height: 320px;
}
.about_section {
  margin-top: 50px;
}
.about_section h2 {
  font-size: 70px;
  font-weight: 400;
  margin-bottom: 20px;
}
.about_section p {
  font-size: 20px;
  line-height: 30px;
  letter-spacing: 1.2px;
  text-align: justify; /* to basically justify center the content written inside the paragraph  */
}
.biography_section {
  margin: 50px 0;
}
.biography_section h3 {
  margin-bottom: 20px;
}
.biography_section ul {
  margin-left: 50px;
}
.biography_section li {
  margin-bottom: 15px;
}

footer {
  margin: 50px 0;
}
footer p {
  text-align: end; /*when having single element to align having some sort of text then use text align property 
                    select that particular element only on which we wanna apply the text property*/
}
